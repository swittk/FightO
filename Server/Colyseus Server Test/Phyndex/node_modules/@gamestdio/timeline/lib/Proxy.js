"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Proxy = require("harmony-proxy");
function createProxy(state, previousState, multiplier) {
    return new Proxy(state, createHandler(previousState, multiplier));
}
exports.createProxy = createProxy;
function createHandler(previousState, multiplier) {
    return {
        get: function (state, property) {
            var currentValue = state[property];
            var previousValue = previousState[property];
            if (currentValue === undefined) {
                currentValue = previousValue;
            }
            if (previousValue === undefined) {
                previousValue = currentValue;
            }
            if (typeof (currentValue) === "number" && typeof (previousValue) === "number") {
                var result = currentValue + (previousValue - currentValue) * multiplier;
                return isNaN(result) ? null : result;
            }
            else if (currentValue === null) {
                return null;
            }
            else if (typeof (currentValue) === "object") {
                return createProxy(currentValue, previousValue, multiplier);
            }
            else {
                return currentValue;
            }
        }
    };
}
